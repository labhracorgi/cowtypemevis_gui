// MDL v1 utf8
network  {
  watchlist = ""
}
module RunPythonScript {
  internal  {
    frame = "841 229 128 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "1107 217 813 979"
        sizeHint = "813 798"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = RunPythonScript
    in0 = ""
    in1 = ""
    in2 = ""
    in3 = ""
    in4 = ""
    in5 = ""
    in6 = ""
    in7 = ""
    in8 = ""
    in9 = ""
    inComment0 = in0
    inComment1 = in1
    inComment2 = in2
    inComment3 = in3
    inComment4 = in4
    inComment5 = in5
    inComment6 = in6
    inComment7 = in7
    inComment8 = in8
    inComment9 = in9
    autoApply0 = TRUE
    autoApply1 = TRUE
    autoApply2 = TRUE
    autoApply3 = TRUE
    autoApply4 = TRUE
    autoApply5 = TRUE
    autoApply6 = TRUE
    autoApply7 = TRUE
    autoApply8 = TRUE
    autoApply9 = TRUE
    out0 = ""
    out1 = ""
    out2 = ""
    out3 = ""
    out4 = ""
    out5 = ""
    out6 = ""
    out7 = ""
    out8 = ""
    out9 = ""
    outComment0 = out0
    outComment1 = out1
    outComment2 = out2
    outComment3 = out3
    outComment4 = out4
    outComment5 = out5
    outComment6 = out6
    outComment7 = out7
    outComment8 = out8
    outComment9 = out9
    initCode = "*# For backward compatibility, set up CTX as alias for ctx
CTX = ctx # ctx is the network's context, not RunPythonScript's

import os
import glob
import sys

#If the disk is not connected then this won't work...
base_path_images = "/Volumes/LaCie/to_be_traced/photometry"

import numpy

#The should follow this exact order.
artery_labels = ["ICA-L","ICA-R","MCA-1-L","MCA1-R","ACA1-L","ACA1-R","AComA","PComA-L","PComA-R","PCA1-L","PCA1-R","VBA"]
n_artery_labels = len(artery_labels)

paths_in = glob.glob(os.path.join(base_path_images,"*/3D_TOF/tof_crop.nii.gz"))
print "="*10
print "These are the image directories: "
print paths_in
n_paths = len(paths_in)

text_paths = glob.glob(os.path.join(base_path_images,"*/3D_TOF"))
print "="*10
print "These are the text/csv directories: "
print text_paths

cache_file_path = "/Volumes/LaCie/to_be_traced/photometry_other/photometry_cache/load_counter_cache.txt"
print "="*10
print "This is the path to the (save-point) cache-file: " + cache_file_path

print "="*10
print "This is the amount of IDs in the sourced folder: " + str(n_paths)

*"
    wakeUpCode = "*#####Reset buttons:
CTX.field("ICAL.isSelected").value = False
CTX.field("ICAR.isSelected").value = False
CTX.field("MCA1L.isSelected").value = False
CTX.field("MCA1R.isSelected").value = False
CTX.field("ACA1L.isSelected").value = False
CTX.field("ACA1R.isSelected").value = False
CTX.field("AComA.isSelected").value = False
CTX.field("PComAL.isSelected").value = False
CTX.field("PComAR.isSelected").value = False
CTX.field("PCA1L.isSelected").value = False
CTX.field("PCA1R.isSelected").value = False
CTX.field("VBA.isSelected").value = False
#####

#Load first image: (Start)
print "="*10
print "******** Starting the selection of type: ********\"
print "="*10

if (os.path.isfile(cache_file_path)):
	load_counter = numpy.loadtxt(cache_file_path).astype(int)
	print load_counter[0]
	print "Starting at this path: (loading cache) " + str(paths_in[load_counter[0]])
	print "Progression: " + str(n_paths) + " of " + str(load_counter[0])
else:
	load_counter = numpy.zeros(2).astype(int)
	print load_counter[0]
	print "Starting at this path: (starting fresh) " + str(paths_in[load_counter[0]])
	print "Progression: " + str(n_paths) + " of " + str(load_counter[0])

print "="*10
current_path = paths_in[load_counter[0]]
print "Now working on: " + current_path
CTX.field("itkImageFileReader.unresolvedFileName").value = current_path

#Open new/old file: (Start)
current_text_path = text_paths[load_counter[0]]
file_path = current_text_path + "/raw_type.csv"
print "And the file path is: " + file_path
if (os.path.isfile(file_path)):
	old_type_array = numpy.loadtxt(file_path,delimiter = ",")
	old_type_boolean_present = True
	print "There are specifications for this individual."
	#####Update buttons:
	if (old_type_array[0] == 0):
		CTX.field("ICAL.isSelected").value = True
	else:
		CTX.field("ICAL.isSelected").value = False
	
	if (old_type_array[1] == 0):
		CTX.field("ICAR.isSelected").value = True
	else:
		CTX.field("ICAR.isSelected").value = False
	
	if (old_type_array[2] == 0):
		CTX.field("MCA1L.isSelected").value = True
	else:
		CTX.field("MCA1L.isSelected").value = False
	
	if (old_type_array[3] == 0):
		CTX.field("MCA1R.isSelected").value = True
	else:
		CTX.field("MCA1R.isSelected").value = False
		
	if (old_type_array[4] == 0):
		CTX.field("ACA1L.isSelected").value = True
	else:
		CTX.field("ACA1L.isSelected").value = False
		
	if (old_type_array[5] == 0):
		CTX.field("ACA1R.isSelected").value = True
	else:
		CTX.field("ACA1R.isSelected").value = False
		
	if (old_type_array[6] == 0):
		CTX.field("AComA.isSelected").value = True
	else:
		CTX.field("AComA.isSelected").value = False
	
	if (old_type_array[7] == 0):
		CTX.field("PComAL.isSelected").value = True
	else:
		CTX.field("PComAL.isSelected").value = False
	
	if (old_type_array[8] == 0):
		CTX.field("PComAR.isSelected").value = True
	else:
		CTX.field("PComAR.isSelected").value = False
	
	if (old_type_array[9] == 0):
		CTX.field("PCA1L.isSelected").value = True
	else:
		CTX.field("PCA1L.isSelected").value = False
	
	if (old_type_array[10] == 0):
		CTX.field("PCA1R.isSelected").value = True
	else:
		CTX.field("PCA1R.isSelected").value = False
	
	if (old_type_array[11] == 0):
		CTX.field("VBA.isSelected").value = True
	else:
		CTX.field("VBA.isSelected").value = False
	#####
else:
	old_type_boolean_present = False
	print "No existing type specifications for this individual, yet."

*"
    code = "*
#Get values from switches: (The order is really important)

new_type_array = numpy.zeros(n_artery_labels)
new_type_array = new_type_array.astype(int)

#####Get new values:
if (CTX.field("ICAL.isSelected").value == True):
	new_type_array[0] = 0
else:
	new_type_array[0] = 1

if (CTX.field("ICAR.isSelected").value == True):
	new_type_array[1] = 0
else:
	new_type_array[1] = 1

if (CTX.field("MCA1L.isSelected").value == True):
	new_type_array[2] = 0
else:
	new_type_array[2] = 1

if (CTX.field("MCA1R.isSelected").value == True):
	new_type_array[3] = 0
else:
	new_type_array[3] = 1

if (CTX.field("ACA1L.isSelected").value == True):
	new_type_array[4] = 0
else:
	new_type_array[4] = 1

if (CTX.field("ACA1R.isSelected").value == True):
	new_type_array[5] = 0
else:
	new_type_array[5] = 1

if (CTX.field("AComA.isSelected").value == True):
	new_type_array[6] = 0
else:
	new_type_array[6] = 1

if (CTX.field("PComAL.isSelected").value == True):
	new_type_array[7] = 0
else:
	new_type_array[7] = 1

if (CTX.field("PComAR.isSelected").value == True):
	new_type_array[8] = 0
else:
	new_type_array[8] = 1

if (CTX.field("PCA1L.isSelected").value == True):
	new_type_array[9] = 0
else:
	new_type_array[9] = 1

if (CTX.field("PCA1R.isSelected").value == True):
	new_type_array[10] = 0
else:
	new_type_array[10] = 1

if (CTX.field("VBA.isSelected").value == True):
	new_type_array[11] = 0
else:
	new_type_array[11] = 1
#####

###This is not necessarily needed as we can "just" overwrite each time.
#Test if old array equals new array:
#if old_type_boolean_present:
#	if (numpy.array_equal(new_type_array,old_type_array)):
#		print "Old type equals new type, continuing..." 
#		#####Reset buttons:
#		CTX.field("ICAL.isSelected").value = False
#		CTX.field("ICAR.isSelected").value = False
#		CTX.field("MCA1L.isSelected").value = False
#		CTX.field("MCA1R.isSelected").value = False
#		CTX.field("ACA1L.isSelected").value = False
#		CTX.field("ACA1R.isSelected").value = False
#		CTX.field("AComA.isSelected").value = False
#		CTX.field("PComAL.isSelected").value = False
#		CTX.field("PComAR.isSelected").value = False
#		CTX.field("PCA1L.isSelected").value = False
#		CTX.field("PCA1R.isSelected").value = False
#		CTX.field("VBA.isSelected").value = False
#		#####
#	
#		print "="*10
#		load_counter = load_counter + 1
#	
#		if (load_counter >= n_paths):	
#			sys.exit("There are no more TOF MRA images in the sourced folder...")
#		
#		current_path = paths_in[load_counter]
#		print "Now working on: " + current_path
#		CTX.field("itkImageFileReader.unresolvedFileName").value = current_path
#		
#		###Possibly an error here regarding the older file types......
#		del(old_type_array)
#		old_type_boolean_present = False
#		sys.exit("The previously specified type for this image is equal to the new one. Continuing with next Image.")

#(Over)write to previously opened/loaded file, if it is different or new:
numpy.savetxt(file_path,new_type_array,delimiter = ",")
print "="*3
print "New or newer type array has been (over)written to csv format..."

#Load next image:
print "="*10
load_counter[0] = load_counter[0] + 1

if (load_counter[0] >= n_paths):	
	print("There are no more TOF MRA images in the sourced folder...")
	error("Stopping/Ending...")

#####Reset buttons:
CTX.field("ICAL.isSelected").value = False
CTX.field("ICAR.isSelected").value = False
CTX.field("MCA1L.isSelected").value = False
CTX.field("MCA1R.isSelected").value = False
CTX.field("ACA1L.isSelected").value = False
CTX.field("ACA1R.isSelected").value = False
CTX.field("AComA.isSelected").value = False
CTX.field("PComAL.isSelected").value = False
CTX.field("PComAR.isSelected").value = False
CTX.field("PCA1L.isSelected").value = False
CTX.field("PCA1R.isSelected").value = False
CTX.field("VBA.isSelected").value = False
#####

#Cache the "load_counter":
print "Caching the current progress: "
print load_counter[0]
numpy.savetxt(cache_file_path,load_counter)
print "="*10

current_path = paths_in[load_counter[0]]
print "Now working on: " + current_path
CTX.field("itkImageFileReader.unresolvedFileName").value = current_path

#Open new/old file:
current_text_path = text_paths[load_counter[0]]
file_path = current_text_path + "/raw_type.csv"
print "And the file path is: " + file_path
if (os.path.isfile(file_path)):
	old_type_array = numpy.loadtxt(file_path,delimiter = ",")
	old_type_boolean_present = True
	print "There are specifications for this individual."
	#####Update buttons:
	if (old_type_array[0] == 0):
		CTX.field("ICAL.isSelected").value = True
	else:
		CTX.field("ICAL.isSelected").value = False
	
	if (old_type_array[1] == 0):
		CTX.field("ICAR.isSelected").value = True
	else:
		CTX.field("ICAR.isSelected").value = False
	
	if (old_type_array[2] == 0):
		CTX.field("MCA1L.isSelected").value = True
	else:
		CTX.field("MCA1L.isSelected").value = False
	
	if (old_type_array[3] == 0):
		CTX.field("MCA1R.isSelected").value = True
	else:
		CTX.field("MCA1R.isSelected").value = False
		
	if (old_type_array[4] == 0):
		CTX.field("ACA1L.isSelected").value = True
	else:
		CTX.field("ACA1L.isSelected").value = False
		
	if (old_type_array[5] == 0):
		CTX.field("ACA1R.isSelected").value = True
	else:
		CTX.field("ACA1R.isSelected").value = False
		
	if (old_type_array[6] == 0):
		CTX.field("AComA.isSelected").value = True
	else:
		CTX.field("AComA.isSelected").value = False
	
	if (old_type_array[7] == 0):
		CTX.field("PComAL.isSelected").value = True
	else:
		CTX.field("PComAL.isSelected").value = False
	
	if (old_type_array[8] == 0):
		CTX.field("PComAR.isSelected").value = True
	else:
		CTX.field("PComAR.isSelected").value = False
	
	if (old_type_array[9] == 0):
		CTX.field("PCA1L.isSelected").value = True
	else:
		CTX.field("PCA1L.isSelected").value = False
	
	if (old_type_array[10] == 0):
		CTX.field("PCA1R.isSelected").value = True
	else:
		CTX.field("PCA1R.isSelected").value = False
	
	if (old_type_array[11] == 0):
		CTX.field("VBA.isSelected").value = True
	else:
		CTX.field("VBA.isSelected").value = False
	#####
else:
	if old_type_boolean_present:
		del(old_type_array)
	old_type_boolean_present = False
	print "No existing type specifications for this individual, yet."*"
    finalizeCode = ""
    showFields = FALSE
    showInitCode = TRUE
    showWakeUpCode = TRUE
    showCode = TRUE
    showFinalizeCode = FALSE
    showConsole = FALSE
  }
}
module SoView2DMenuItem {
  internal  {
    frame = "-19 473 152 64"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "386 830 333 522"
        sizeHint = "328 519"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = VBA
    labelOn = VBA-missing
    valueOn = ""
    labelOff = VBA-here
    valueOff = ""
    labelOver = VBA-change
    valueOver = ""
    idString = ""
    color = "1 1 1"
    backgroundColor = "0 0.501960813999176 0"
    useBackgroundColorSelected = TRUE
    backgroundColorSelected = "0.501960813999176 0 0"
    transparency = 1
    bkTransparency = 1
    showItem = TRUE
    showBackground = TRUE
    useShadowText = FALSE
    borderWidth = 3
    editable = FALSE
    useAsButton = FALSE
    sensitive = TRUE
    alignX = ALIGN_CENTER
    alignY = ALIGN_Y_CENTER
    itemPosition = "0.5 0.5"
    iconOffPath = ""
    iconOnPath = ""
    iconOverPath = ""
    minItemExt = "16 16"
  }
}
module SoView2DMenuItem {
  internal  {
    frame = "-19 553 152 64"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "386 830 333 522"
        sizeHint = "328 519"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = PCA1R
    labelOn = PCA1-R-missing
    valueOn = ""
    labelOff = PCA1-R-here
    valueOff = ""
    labelOver = PCA1-R-change
    valueOver = ""
    idString = ""
    color = "1 1 1"
    backgroundColor = "0 0.501960813999176 0"
    useBackgroundColorSelected = TRUE
    backgroundColorSelected = "0.501960813999176 0 0"
    transparency = 1
    bkTransparency = 1
    showItem = TRUE
    showBackground = TRUE
    useShadowText = FALSE
    borderWidth = 3
    editable = FALSE
    useAsButton = FALSE
    sensitive = TRUE
    alignX = ALIGN_CENTER
    alignY = ALIGN_Y_CENTER
    itemPosition = "0.5 0.5"
    iconOffPath = ""
    iconOnPath = ""
    iconOverPath = ""
    minItemExt = "16 16"
  }
}
module SoView2DMenuItem {
  internal  {
    frame = "-19 633 152 64"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "386 830 333 522"
        sizeHint = "328 519"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = PCA1L
    labelOn = PCA1-L-missing
    valueOn = ""
    labelOff = PCA1-L-here
    valueOff = ""
    labelOver = PCA1-L-change
    valueOver = ""
    idString = ""
    color = "1 1 1"
    backgroundColor = "0 0.501960813999176 0"
    useBackgroundColorSelected = TRUE
    backgroundColorSelected = "0.501960813999176 0 0"
    transparency = 1
    bkTransparency = 1
    showItem = TRUE
    showBackground = TRUE
    useShadowText = FALSE
    borderWidth = 3
    editable = FALSE
    useAsButton = FALSE
    sensitive = TRUE
    alignX = ALIGN_CENTER
    alignY = ALIGN_Y_CENTER
    itemPosition = "0.5 0.5"
    iconOffPath = ""
    iconOnPath = ""
    iconOverPath = ""
    minItemExt = "16 16"
  }
}
module SoView2DMenuItem {
  internal  {
    frame = "149 553 152 64"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "386 830 333 522"
        sizeHint = "328 519"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = PComAR
    labelOn = PComA-R-missing
    valueOn = ""
    labelOff = PComA-R-here
    valueOff = ""
    labelOver = PComA-R-change
    valueOver = ""
    idString = ""
    color = "1 1 1"
    backgroundColor = "0 0.501960813999176 0"
    useBackgroundColorSelected = TRUE
    backgroundColorSelected = "0.501960813999176 0 0"
    transparency = 1
    bkTransparency = 1
    showItem = TRUE
    showBackground = TRUE
    useShadowText = FALSE
    borderWidth = 3
    editable = FALSE
    useAsButton = FALSE
    sensitive = TRUE
    alignX = ALIGN_CENTER
    alignY = ALIGN_Y_CENTER
    itemPosition = "0.5 0.5"
    iconOffPath = ""
    iconOnPath = ""
    iconOverPath = ""
    minItemExt = "16 16"
  }
}
module SoView2DMenuItem {
  internal  {
    frame = "149 633 152 64"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "386 830 333 522"
        sizeHint = "328 519"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = PComAL
    labelOn = PComA-L-missing
    valueOn = ""
    labelOff = PComA-L-here
    valueOff = ""
    labelOver = PComA-L-change
    valueOver = ""
    idString = ""
    color = "1 1 1"
    backgroundColor = "0 0.501960813999176 0"
    useBackgroundColorSelected = TRUE
    backgroundColorSelected = "0.501960813999176 0 0"
    transparency = 1
    bkTransparency = 1
    showItem = TRUE
    showBackground = TRUE
    useShadowText = FALSE
    borderWidth = 3
    editable = FALSE
    useAsButton = FALSE
    sensitive = TRUE
    alignX = ALIGN_CENTER
    alignY = ALIGN_Y_CENTER
    itemPosition = "0.5 0.5"
    iconOffPath = ""
    iconOnPath = ""
    iconOverPath = ""
    minItemExt = "16 16"
  }
}
module SoView2DMenuItem {
  internal  {
    frame = "317 473 152 64"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "386 830 333 522"
        sizeHint = "328 519"
        wasOpen = no
      }
      window _scriptingconsole {
        geometry = "979 491 600 500"
        sizeHint = "256 192"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = AComA
    labelOn = AComA-missing
    valueOn = ""
    labelOff = AComA-here
    valueOff = ""
    labelOver = AComA-change
    valueOver = ""
    idString = ""
    color = "1 1 1"
    backgroundColor = "0 0.501960813999176 0"
    useBackgroundColorSelected = TRUE
    backgroundColorSelected = "0.501960813999176 0 0"
    transparency = 1
    bkTransparency = 1
    showItem = TRUE
    showBackground = TRUE
    useShadowText = FALSE
    borderWidth = 3
    editable = FALSE
    useAsButton = FALSE
    sensitive = TRUE
    alignX = ALIGN_CENTER
    alignY = ALIGN_Y_CENTER
    itemPosition = "0.5 0.5"
    iconOffPath = ""
    iconOnPath = ""
    iconOverPath = ""
    minItemExt = "16 16"
  }
}
module SoView2DMenuItem {
  internal  {
    frame = "317 553 152 64"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "386 830 333 522"
        sizeHint = "328 519"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = ACA1R
    labelOn = ACA1-R-missing
    valueOn = ""
    labelOff = ACA1-R-here
    valueOff = ""
    labelOver = ACA1-R-change
    valueOver = ""
    idString = ""
    color = "1 1 1"
    backgroundColor = "0 0.501960813999176 0"
    useBackgroundColorSelected = TRUE
    backgroundColorSelected = "0.501960813999176 0 0"
    transparency = 1
    bkTransparency = 1
    showItem = TRUE
    showBackground = TRUE
    useShadowText = FALSE
    borderWidth = 3
    editable = FALSE
    useAsButton = FALSE
    sensitive = TRUE
    alignX = ALIGN_CENTER
    alignY = ALIGN_Y_CENTER
    itemPosition = "0.5 0.5"
    iconOffPath = ""
    iconOnPath = ""
    iconOverPath = ""
    minItemExt = "16 16"
  }
}
module SoView2DMenuItem {
  internal  {
    frame = "317 633 152 64"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "278 899 333 522"
        sizeHint = "328 519"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = ACA1L
    labelOn = ACA1-L-missing
    valueOn = ""
    labelOff = ACA1-L-here
    valueOff = ""
    labelOver = ACA1-L-change
    valueOver = ""
    idString = ""
    color = "1 1 1"
    backgroundColor = "0 0.501960813999176 0"
    useBackgroundColorSelected = TRUE
    backgroundColorSelected = "0.501960813999176 0 0"
    transparency = 1
    bkTransparency = 1
    showItem = TRUE
    showBackground = TRUE
    useShadowText = FALSE
    borderWidth = 3
    editable = FALSE
    useAsButton = FALSE
    sensitive = TRUE
    alignX = ALIGN_CENTER
    alignY = ALIGN_Y_CENTER
    itemPosition = "0.5 0.5"
    iconOffPath = ""
    iconOnPath = ""
    iconOverPath = ""
    minItemExt = "16 16"
  }
}
module SoView2DMenuItem {
  internal  {
    frame = "485 553 152 64"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "365 830 333 522"
        sizeHint = "328 519"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = MCA1R
    labelOn = MCA1-R-missing
    valueOn = ""
    labelOff = MCA1-R-here
    valueOff = ""
    labelOver = MCA1-R-change
    valueOver = ""
    idString = ""
    color = "1 1 1"
    backgroundColor = "0 0.501960813999176 0"
    useBackgroundColorSelected = TRUE
    backgroundColorSelected = "0.501960813999176 0 0"
    transparency = 1
    bkTransparency = 1
    showItem = TRUE
    showBackground = TRUE
    useShadowText = FALSE
    borderWidth = 3
    editable = FALSE
    useAsButton = FALSE
    sensitive = TRUE
    alignX = ALIGN_CENTER
    alignY = ALIGN_Y_CENTER
    itemPosition = "0.5 0.5"
    iconOffPath = ""
    iconOnPath = ""
    iconOverPath = ""
    minItemExt = "16 16"
  }
}
module SoView2DMenuItem {
  internal  {
    frame = "485 633 152 64"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "386 830 333 522"
        sizeHint = "328 519"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = MCA1L
    labelOn = MCA1-L-missing
    valueOn = ""
    labelOff = MCA1-L-here
    valueOff = ""
    labelOver = MCA1-L-change
    valueOver = ""
    idString = ""
    color = "1 1 1"
    backgroundColor = "0 0.501960813999176 0"
    useBackgroundColorSelected = TRUE
    backgroundColorSelected = "0.501960813999176 0 0"
    transparency = 1
    bkTransparency = 1
    showItem = TRUE
    showBackground = TRUE
    useShadowText = FALSE
    borderWidth = 3
    editable = FALSE
    useAsButton = FALSE
    sensitive = TRUE
    alignX = ALIGN_CENTER
    alignY = ALIGN_Y_CENTER
    itemPosition = "0.5 0.5"
    iconOffPath = ""
    iconOnPath = ""
    iconOverPath = ""
    minItemExt = "16 16"
  }
}
module itkImageFileReader {
  internal  {
    frame = "489 277 144 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "942 387 510 435"
        sizeHint = "323 431"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = itkImageFileReader
    fileDataType = int32
    autoDetermineDataType = FALSE
    correctSubVoxelShift = FALSE
    fileDimension = 3
    info = "Loading okay."
    numDims = 3
    fileType = TypeNotApplicable
    componentType = float
    pixelType = SCALAR
    loaderType = NiftiImageIO
    outputMetaDataStr = "ITK_FileNotes : FSL5.0
aux_file : 
bitpix : 32
cal_max : 0
cal_min : 0
datatype : 16
descrip : FSL5.0
dim[0] : 3
dim[1] : 696
dim[2] : 768
dim[3] : 232
dim[4] : 1
dim[5] : 1
dim[6] : 1
dim[7] : 1
dim_info : 
intent_code : 0
intent_name : 
intent_p1 : 0
intent_p2 : 0
intent_p3 : 0
pixdim[0] : 1
pixdim[1] : 0.260417
pixdim[2] : 0.260417
pixdim[3] : 0.5
pixdim[4] : 0.021
pixdim[5] : 0
pixdim[6] : 0
pixdim[7] : 0
qform_code : 1
qoffset_x : -94.2401
qoffset_y : -102.44
qoffset_z : -101.346
quatern_b : 0.103336
quatern_c : 0.000971558
quatern_d : -0.0184981
scl_inter : 0
scl_slope : 1
sform_code : 1
slice_code : 
slice_duration : 0
slice_end : 0
slice_start : 0
srow_x : 0.260238 0.00963345 -0.000945335 -94.2401
srow_y : -0.00952888 0.254677 -0.102783 -102.44
srow_z : -0.00149881 0.0535143 0.48932 -101.346
toffset : 0
vox_offset : 352
xyzt_units : 

"
    suppressErrorPosting = FALSE
    unresolvedFileName = /Volumes/LaCie/to_be_traced/photometry/102729/3D_TOF/tof_crop.nii.gz
  }
}
module SoGroup {
  internal  {
    frame = "481 373 432 56"
    moduleGroupName = ""
    windows  {
      window _viewer {
        geometry = "1741 123 400 400"
        sizeHint = "400 400"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = SoGroup
  }
}
module SoViewportRegion {
  internal  {
    frame = "641 277 144 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "925 231 784 387"
        sizeHint = "757 357"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = SoViewportRegion
    on = TRUE
    modifyVP = TRUE
    usePreviousVP = FALSE
    xPositionMode = POSITION_MODE_MIN_AND_SIZE
    x1 = 0
    x1ReferenceMode = REFERENCE_MODE_MIN
    x1DomainMode = DOMAIN_MODE_RELATIVE_TO_WIDTH
    x2 = 0.2
    x2ReferenceMode = REFERENCE_MODE_MIN
    x2DomainMode = DOMAIN_MODE_RELATIVE_TO_MIN
    yPositionMode = POSITION_MODE_MAX_AND_SIZE
    y1 = 0
    y1ReferenceMode = REFERENCE_MODE_MAX
    y1DomainMode = DOMAIN_MODE_RELATIVE_TO_HEIGHT
    y2 = 1
    y2ReferenceMode = REFERENCE_MODE_MAX
    y2DomainMode = DOMAIN_MODE_RELATIVE_TO_MIN
    projectionType = ORTHOGRAPHIC
    renderDelayedPaths = TRUE
    detectMouseOver = TRUE
    forwardEvents = TRUE
    forwardEventsInViewportOnly = TRUE
    mapEventToViewport = TRUE
    consumeEventsInViewport = TRUE
    preset = upperLeftMinThird
  }
}
module SoView2DMenu {
  internal  {
    frame = "849 565 128 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "572 479 432 632"
        sizeHint = "432 632"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = SoView2DMenu
    interactionProviderID = ""
    drawingOn = TRUE
    editingOn = TRUE
    fixZOn = TRUE
    color = "1 0 1"
    selectionTolerance = 4
    needsValidVoxel = FALSE
    button1 = RELEASED
    button2 = IGNORED
    button3 = IGNORED
    shift = IGNORED
    control = IGNORED
    alt = IGNORED
    wantsAllEvents = FALSE
    wantsKeyEvents = FALSE
    wantsMouseWheelEvents = FALSE
    setEventHandled = FALSE
    ignoreHandledEvents = FALSE
    createNewMode = FALSE
    renderOnSlab = FALSE
    clipToSlice = FALSE
    cursorShape = UNDEFINED_CURSOR
    fontSize = 16
    layoutType = TOP_DOWN
    menuType = FIXED_MENU
    iconBlendMode = IconReplace
    sensitiveCornerArea = 30
    borderWidth = 1
    drawBackground = TRUE
    radioBox = FALSE
    suppressHighlighting = FALSE
    transparency = 0.99999982
    radius = 10
    gestureLineColor = "1 0.5686274766922 0.509803950786591"
    showGestureDirection = TRUE
    disableZBuffer = FALSE
    updateActiveStateOnChange = TRUE
    fixedPosition = "0 0"
    normalizeMPos = FALSE
    useFirstItemProps = FALSE
    popupDelay = 0
    minGestureMovement = 4
    setEventHandled = FALSE
    clearItems = TRUE
    hold = FALSE
    hiddenMenuBorder = BORDER_LEFT
  }
}
module View2D {
  internal  {
    frame = "661 189 120 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "2 45 807 680"
        sizeHint = "400 400"
        wasOpen = no
      }
      window Settings {
        geometry = "1131 451 325 581"
        sizeHint = "296 581"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = View2D
    inventorInputOn = TRUE
    inventorOutputOn = FALSE
    view2DExtensionsOn = TRUE
    startSlice = 0
    numSlices = 1
    numXSlices = 1
    sliceStep = 1
    slab = 1
    blendMode = BLEND_REPLACE
    timePoint = 0
    maxTimePoint = 0
    filterMode = FILTER_NEAREST
    standardKeys = TRUE
    cineMode = CINE_Z
    cineDirection = CINE_PINGPONG
    cineRepeat = CINE_ONCE
    cineSpeed = 0.1
    cineAlwaysReset = TRUE
    snapToCenter = FALSE
    zoomMode = VIEW2D_AUTO_ZOOM
    unzoomOnImageChange = FALSE
    sliceZoom = 1
    sliceZoomSynced = 1
    baseColor = "1 1 1"
    margin = "2 2"
    sliceOrigin = "0 0"
    useShaders = TRUE
    useManagedInteraction = FALSE
    lutCenter = 490
    lutWidth = 789
    annotationOn = TRUE
    annotationMode = ANNO_MODE_AUTO
    annotationSizeMode = ANNO_SHOW_DETAILED
    annotationCol = "0.899999976158142 0.899999976158142 0.899999976158142"
    annotationFontSize = ANNO_SIZE_AUTO
    annoCoords = Voxel
    annoCTValue = AsIs
    borderOn = FALSE
    borderColor = "0.899999976158142 0.899999976158142 0.899999976158142"
    valueHighPrecision = TRUE
    showColorChannelValues = FALSE
    colorChannelSeparator = " / "
    maxPrecision = 4
    enableSlicing = TRUE
    useRelativeLUTIfNoInputImage = TRUE
    hiResRendering = TRUE
  }
}
module SoView2D {
  internal  {
    frame = "989 525 104 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "148 297 463 518"
        sizeHint = "463 518"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = SoView2D1
    interactionProviderID = ""
    viewerId = viewer
    startSlice = 0
    sliceStep = 1
    numSlices = 1
    numXSlices = 1
    maxSlice = 0
    keepSlicesInView = FALSE
    slab = 1
    lowerLeft = "0 0"
    upperRight = "1 1"
    margin = "2 2"
    spacing = "4 4"
    sliceZoom = 1
    sliceZoomSynchronized = 1
    zoomCenter = "0.5 0.5"
    minSliceZoomKeyboard = 1
    sliceOrigin = "0 0"
    viewingCenter = "0 0 0"
    enableViewingCenter = FALSE
    unzoomOnImageChange = FALSE
    drawImageData = FALSE
    timePoint = 0
    maxTimePoint = 0
    snapToCenter = FALSE
    standardKeys = TRUE
    standardKeysNumbers = TRUE
    standardKeysNeedValidPosition = FALSE
    passHandledFlagToInventor = FALSE
    reverseExtensionDrawingOrder = FALSE
    blendMode = BLEND_REPLACE
    filterMode = FILTER_LINEAR
    cacheMode = SLICE_CACHING_OFF
    sliceAlignX = SLICE_ALIGNX_CENTER
    sliceAlignY = SLICE_ALIGNY_CENTER
    useShaders = TRUE
    applyLut = TRUE
    lutPrecision = VIEW2D_LUT_AUTO
    zoomMode = VIEW2D_AUTO_ZOOM
    zoomModeParameter = 1
    invertKeyPanningDirections = FALSE
    invertKeySlicingDirection = FALSE
    overrideAspectRatio = FALSE
    overrideAspectRatioValue = 1
    alphaFactor = 0
    baseColor = "1 0.933333337306976 0.388235300779343"
    backgroundAlphaFactor = 0.1
    backgroundColor = "1 0 1"
    cineCenterT = 0
    cineIntervalT = 0
    cineCenterZ = 0
    cineIntervalZ = 0
    cineMode = CINE_Z
    cineDirection = CINE_PINGPONG
    cineRepeat = CINE_ONCE
    cineSpeed = 0.1
    cineFullRangeZ = TRUE
    cineFullRangeT = TRUE
    cineAlwaysReset = TRUE
    deletingEnabled = TRUE
    handle2DEvents = TRUE
    handle3DEvents = TRUE
    useManagedInteraction = FALSE
    devicePixelSize = 1
    enableZBuffer = TRUE
    enableZWrite = TRUE
  }
}
module SoView2DMenuItem {
  internal  {
    frame = "661 553 152 64"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "49 130 328 519"
        sizeHint = "328 519"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = ICAR
    labelOn = ICA-R-missing
    valueOn = ""
    labelOff = ICA-R-here
    valueOff = ""
    labelOver = ICA-R-change
    valueOver = ""
    idString = ""
    color = "1 1 1"
    backgroundColor = "0 0.501960813999176 0"
    useBackgroundColorSelected = TRUE
    backgroundColorSelected = "0.501960813999176 0 0"
    transparency = 1
    bkTransparency = 1
    showItem = TRUE
    showBackground = TRUE
    useShadowText = FALSE
    borderWidth = 3
    editable = FALSE
    useAsButton = FALSE
    sensitive = TRUE
    alignX = ALIGN_CENTER
    alignY = ALIGN_Y_CENTER
    itemPosition = "0.5 0.5"
    iconOffPath = ""
    iconOnPath = ""
    iconOverPath = ""
    minItemExt = "16 16"
  }
}
module ConstantImage {
  internal  {
    frame = "989 637 120 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "739 931 276 355"
        sizeHint = "254 253"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = ConstantImage
    sizeX = 256
    sizeY = 256
    sizeZ = 1
    sizeC = 1
    sizeT = 1
    sizeU = 1
    dataType = "unsigned int8"
    fillValue = 0
    autoApply = FALSE
  }
}
module SoView2DMenuItem {
  internal  {
    frame = "661 633 152 64"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "386 830 333 522"
        sizeHint = "328 519"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = ICAL
    labelOn = ICA-L-missing
    valueOn = ""
    labelOff = ICA-L-here
    valueOff = ""
    labelOver = ICA-L-change
    valueOver = ""
    idString = ""
    color = "1 1 1"
    backgroundColor = "0 0.501960813999176 0"
    useBackgroundColorSelected = TRUE
    backgroundColorSelected = "0.501960813999176 0 0"
    transparency = 1
    bkTransparency = 1
    showItem = TRUE
    showBackground = TRUE
    useShadowText = FALSE
    borderWidth = 3
    editable = FALSE
    useAsButton = FALSE
    sensitive = TRUE
    alignX = ALIGN_CENTER
    alignY = ALIGN_Y_CENTER
    itemPosition = "0.5 0.5"
    iconOffPath = ""
    iconOnPath = ""
    iconOverPath = ""
    minItemExt = "16 16"
  }
}
module View3D {
  internal  {
    frame = "505 189 144 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "48 45 1823 1151"
        sizeHint = "1046 664"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = View3D
    autoViewAll = TRUE
    inventorInputOn = TRUE
    inventorOutputOn = FALSE
    lutType = Ramp
    currentTimePoint = 0
    staticSamplingRate = 1
    quality = 1
    filterVolumeData = FilterLinear
    lutEditorColorPoints = "[ 0 0 0 0, 4095 1 1 1 ]"
    lutEditorAlphaPoints = "[ 0 0, 4095 1 ]"
    lutEditorRelativeLut = FALSE
    lutEditorColorInterpolation = InterpolateRGB
    lutEditorAlphaFactor = 1
    orientationProjectionType = PERSPECTIVE
    orientationLocation = LOWER_RIGHT
    orientationOn = TRUE
    orientationModel = CUBE
    greyCenter = 0.345001757144928
    greyWidth = 0.169999957084656
    alphaFactor = 1
    colorFactor = "1 1 1"
    camType = TRUE
    camPosition = "11.7499580383301 93.9633636474609 75.7406616210938"
    camOrientation = "-0.0267126299440861 -0.315129488706589 -0.948672711849213 3.27742767333984"
    initialCameraOrientation = CAMERA_KEEP_AS_IS
    camFar = 226.89937
    camNear = 23.770647
    camFocal = 125.23362
    camHeight = 0.78539801
    decoration = FALSE
    hiResRendering = TRUE
    annotations = TRUE
    background = TRUE
    mode = VolumeRendering
    interactiveQuality = Medium
  }
  internalFields  {
    renderer.gradientQuality = GradientQualityAutomatic
    renderer.enhancementAlphaMix = 0.25
    renderer.boundaryEnhancement = FALSE
    renderer.boundaryEnhancementFactor = 1
    renderer.boundaryEnhancementExponent = 1
    renderer.boundaryEnhancementGradientBias = 0
    renderer.silhouetteEnhancement = FALSE
    renderer.silhouetteEnhancementExponent = 1
    renderer.silhouetteEnhancementFactor = 1
    renderer.toneShading = FALSE
    renderer.toneShadingWarmColor = "0.67451000213623 0.533333003520966 0.141176000237465"
    renderer.toneShadingColdColor = "0 0 0.400000005960464"
    renderer.toneShadingWarmDiffuse = 0.60000002
    renderer.toneShadingColdDiffuse = 0.2
    renderer.toneShadingAngle = 45
    renderer.materialAmbient = 0.60000002
    renderer.materialDiffuse = 1
    renderer.materialSpecular = 1
    renderer.materialSpecularity = 32
    renderer.light1Enabled = TRUE
    renderer.light1DiffuseIntensity = 1
    renderer.light1SpecularIntensity = 1
    renderer.light1Color = "1 1 1"
    renderer.light1PolarPhi = 45
    renderer.light1PolarRho = 0
    renderer.light2Enabled = FALSE
    renderer.light2DiffuseIntensity = 1
    renderer.light2SpecularIntensity = 1
    renderer.light2Color = "1 1 1"
    renderer.light2PolarPhi = 0
    renderer.light2PolarRho = 0
    renderer.light3Enabled = FALSE
    renderer.light3DiffuseIntensity = 1
    renderer.light3SpecularIntensity = 1
    renderer.light3Color = "1 1 1"
    renderer.light3PolarPhi = -45
    renderer.light3PolarRho = 0
    renderer.sizeOutputX = 696
    renderer.sizeOutputY = 768
    renderer.sizeOutputZ = 232
    renderer.subVolumeStartX = 0
    renderer.subVolumeStartY = 0
    renderer.subVolumeStartZ = 0
    renderer.subVolumeEndX = 696
    renderer.subVolumeEndY = 768
    renderer.subVolumeEndZ = 232
    clip.hideGeometry = FALSE
    clip.on = FALSE
    clip.left = FALSE
    clip.right = FALSE
    clip.top = FALSE
    clip.bottom = FALSE
    clip.rear = FALSE
    clip.front = FALSE
    clip.translation0 = "1 0 0"
    clip.translation1 = "-1 0 0"
    clip.translation2 = "0 1 0"
    clip.translation3 = "0 -1 0"
    clip.translation4 = "0 0 1"
    clip.translation5 = "0 0 -1"
    clip.rotation0 = "0 0 0.999999940395355 1.57079994678497"
    clip.rotation1 = "0 0 -0.999999940395355 1.57079994678497"
    clip.rotation2 = "0 0 -1 3.1415901184082"
    clip.rotation3 = "0 0 1 0"
    clip.rotation4 = "-0.999999940395355 0 0 1.57079994678497"
    clip.rotation5 = "0.999999940395355 0 0 1.57079994678497"
  }
}
connections  {
  SoGroup.children = "ICAL.self ICAR.self MCA1L.self MCA1R.self ACA1L.self ACA1R.self AComA.self PComAL.self PComAR.self PCA1L.self PCA1R.self VBA.self SoView2DMenu.self SoView2D1.self"
  SoViewportRegion.children = SoGroup.self
  View2D.inImage = itkImageFileReader.output0
  View2D.inInvPreLUT = SoViewportRegion.self
  SoView2D1.image = ConstantImage.output0
  View3D.inImage = itkImageFileReader.output0
  View3D.inInvPreLUT = SoViewportRegion.self
}
networkModel = ""
